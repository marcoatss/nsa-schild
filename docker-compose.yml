services:
  # PostgreSQL Database
  postgres:
    image: postgres@sha256:1ebd963e5c598f944a4e9ba27de4c95289d663dcc73731025aa53c5254094d8f
    container_name: schild-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: schild_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Strapi Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: schild-backend
    restart: unless-stopped
    env_file:
      - ./backend/.env${ENV_SUFFIX:-.development}
    environment:
      NODE_ENV: development
    ports:
      - "1337:1337"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - backend_uploads:/app/public/uploads
    depends_on:
      postgres:
        condition: service_healthy
    command: npm run develop

  # Next.js Frontend (optional - can run locally with `npm run dev`)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: schild-frontend
    restart: unless-stopped
    env_file:
      - ./frontend/.env${ENV_SUFFIX:-.local}
    environment:
      NODE_ENV: development
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    command: npm run dev
    profiles:
      - full  # Only starts with: docker-compose --profile full up

  # Database Import Tool (run once)
  db-import:
    build:
      context: .
      dockerfile: Dockerfile.db-import
    container_name: schild-db-import
    environment:
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: schild_db
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
    volumes:
      - ./db:/app/db:ro
    depends_on:
      postgres:
        condition: service_healthy
    profiles:
      - tools
    command: python3 import-db.py

volumes:
  postgres_data:
  backend_uploads:

